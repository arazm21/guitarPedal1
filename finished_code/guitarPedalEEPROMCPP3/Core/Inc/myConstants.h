// Constants.h

#ifndef MYCONSTANTS_H
#define MYCONSTANTS_H

//enum class PedalType : int {
//    Distortion = 1,
//    Delay =2
//    // Add more pedal types here as needed...
//};

// Define struct for distortion pedal
struct functionFind{
	uint8_t pedalType;
	void* structPointer;
};



static const int MAX_CHAINS = 10;
static const int MAX_PEDALS_PER_CHAIN=4;
static const int PEDAL_NAME_SIZE=12;
static const int EACH_PEDAL_SIZE_BYTES=4;
typedef struct {
	uint8_t parameters [EACH_PEDAL_SIZE_BYTES];
}individualPedal;

typedef struct {  //8*15 + 12 = 132
	individualPedal allPedals[MAX_PEDALS_PER_CHAIN];
	char name[PEDAL_NAME_SIZE];
}singlePedalChain;

typedef struct {
	singlePedalChain allChains[MAX_CHAINS];
}allGuitarChains;






static const int noChang = 0;
static const int OverA = 1;  //tested
static const int OverC = 2;
static const int eqHigh = 3; //tested
static const int eqLow = 4;  //tested
static const int distE = 5;
static const int HP1 = 6;  //tested
static const int tremM = 7; //tested
//static const int flanger = 8;
static const int Delay = 8;
static const int Reverb = 9;


 char INDIVIDUALPEDALSSTRING[10][12]={
		 "nothing",
		 "atanOD",
		 "cubidOD",
		 "eqHigh",
		 "eqLow",
		 "expDistort",
		 "hpFilt",
		 "modTrem",

		 //"LPbutter"
		 //"myDistort",
		 "delay",
		 "reverb"
 };

 char MENUSTRINGS[4][15] = {
    "concert mode",
    "metronome",
    "pedals",
	"save"
};
 char METRONOMEMENUSTRINGS[5][10]={
		 "BPM",
		 "LED",
		 "click",
		 "return",
		 "sign"
 };
 char PEDALSMENUOPTIONSSTRINGS[3][10]={
		"edit",
		"edit name",
		"return"
};
 char GUITARCHAINSOPTIONSTRINGS[3][7]={
		"add",
		"delete"	,
		"return"
};
 char INDIVIDUALPEDALOPTIONSTRINGS[3][14]={
		"change params",
		"change pedal",
		"return"
};
 //--------------------------------
 const char* NOTHING_STRINGS[]={

};const  char* ATAN_STRINGS[]={
		"gain"
};const  char* CUBIC_STRINGS[]={
		"factor_ind",
		"level"
};const  char* EQ_HIGH_STRINGS[]={
		"Fc"	,
		"V0"
};const  char* EQ_LOW_STRINGS[]={
		"Fc"	,
		"V0"
};const  char* EXP_DIST_STRINGS[]={
		"G",
		"S"
};const  char* FIRST_ORDER_STRINGS[]={
		"Fc"
};const  char* MOD_TREM_STRINGS[]={
		"depth",
		"rate"	,

};

//const  char* MY_DIST_STRINGS[]={
//
//};

//const  char* FLANGER_STRINGS[]={
//		"LFO freq",
//		"depth"
//};

const  char* DELAY_STRINGS[]={
		"delay",
		"G",
		"amount"
};
const  char* REVERB_STRINGS[]={
		"delay_s",
		"amount"
};
 //--------------------------------


// ' border', 1x64px
// ' border', 106x21px
const unsigned char epd_bitmap__border []  = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00
};
// ' chainIcon', 16x16px
const unsigned char epd_bitmap__chainIcon []  = {
	0x38, 0x00, 0x6c, 0x00, 0xc6, 0xe0, 0x83, 0xb0, 0xc3, 0x98, 0x66, 0x8c, 0x35, 0x84, 0x1f, 0x04,
	0x0e, 0x04, 0x04, 0x04, 0x04, 0x04, 0x06, 0x0c, 0x03, 0x18, 0x01, 0xb0, 0x00, 0xe0, 0x00, 0x00
};
// ' handle', 3x7px
const unsigned char epd_bitmap__handle []  = {
	0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0
};
// ' metronomeIcon', 16x16px
const unsigned char  epd_bitmap__pedalIcon[]  = {
	0x00, 0x00, 0x1f, 0xf8, 0x3f, 0xfc, 0x31, 0x8c, 0x31, 0x8c, 0x3f, 0xfc, 0x31, 0x8c, 0x31, 0x8c,
	0x3f, 0xfc, 0x31, 0x8c, 0x31, 0x8c, 0x3f, 0xfc, 0x1f, 0xf8, 0x07, 0xe0, 0x03, 0xc0, 0x00, 0x00
};
// ' scrollBar', 1x64px
const unsigned char epd_bitmap__scrollBar []  = {
	0x40, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80,
	0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80,
	0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00,
	0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00
};
// ' pedalIcon', 16x16px
const unsigned char epd_bitmap__metronomeIcon []  = {
	0x03, 0xc0, 0x02, 0x40, 0x02, 0x40, 0x02, 0x40, 0x06, 0x60, 0x04, 0x20, 0x04, 0x2f, 0x0c, 0x37,
	0x08, 0x1f, 0x08, 0x1d, 0x08, 0x38, 0x18, 0x78, 0x10, 0xe8, 0x11, 0xc8, 0x11, 0x88, 0x1f, 0xf8
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 480)
const int ICONAMOUNT = 3;
const unsigned char* MENUICONS[3] = {
	epd_bitmap__chainIcon,
	epd_bitmap__metronomeIcon,
	epd_bitmap__pedalIcon,
};

const static int menuNumber=1;
const static int pedalsNumber=2;
const static int metronomeNumber=3;
const static int guitarChainNumber=4;






#endif // MYCONSTANTS_H
